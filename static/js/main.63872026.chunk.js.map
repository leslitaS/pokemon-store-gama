{"version":3,"sources":["pages/Home/pokemon.js","pages/Home/index.js","pages/Search/pokeSearch.js","pages/Search/index.js","App.js","index.js"],"names":["getAllPokemon","url","a","Promise","resolve","reject","fetch","then","res","json","data","getPokemon","App","props","useState","pokemon","setPokemon","pokemonShop","setPokemonShop","setPokeShop","nextUrl","setNextUrl","prevUrl","setPrevUrl","setLoading","iniUrl","show","setShow","useEffect","response","next","previus","loadingPokemon","results","fetchData","all","map","pokemonRecord","console","log","poke","previous","prev","className","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Form","inline","FormControl","type","placeholder","to","variant","class","onClick","CardDeck","Card","style","width","height","key","Img","src","alt","Body","Title","name","Text","Button","pokemons","state","filter","p","length","sort","b","Modal","onHide","Header","closeButton","namePoke","SearchPokemon","pokeSearch","value","onChange","e","target","getSearchPokemon","path","exact","component","Home","Search","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63872026.chunk.js","sourcesContent":["export async function getAllPokemon(url){\r\n    return new Promise((resolve, reject)=>{\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                resolve(data);\r\n                \r\n            })\r\n    } )\r\n}\r\n\r\n\r\nexport async function getPokemon(url){\r\n    return new Promise((resolve, reject)=>{\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                resolve(data);\r\n              \r\n            })\r\n            \r\n    } )\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {Link } from 'react-router-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl'; \r\nimport Card from 'react-bootstrap/Card';\r\nimport CardDeck from 'react-bootstrap/CardDeck';\r\nimport  Button from 'react-bootstrap/Button';\r\nimport  Modal from 'react-bootstrap/Modal';\r\n\r\n\r\nimport '../../css/style.css';\r\n\r\nimport { getAllPokemon , getPokemon} from './pokemon';\r\n\r\n\r\n\r\nfunction App(props) {\r\n  const [ pokemon, setPokemon] =  useState ([]);\r\n  const [pokemonShop, setPokemonShop] = useState([]);\r\n  const [pokeShop, setPokeShop] = useState(false);\r\n  const [pokeSearch, setPokeSearch] =  useState([]);\r\n  const [nextUrl, setNextUrl] = useState('');\r\n  const [prevUrl, setPrevUrl] = useState('');\r\n  const [loading, setLoading] = useState('');\r\n  const quantidad = 0;\r\n  const iniUrl = 'https://pokeapi.co/api/v2/pokemon';\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n\r\n  useEffect(() => {\r\n    async function fetchData(){\r\n      let response = await getAllPokemon(iniUrl);\r\n      setNextUrl(response.next);\r\n        setPrevUrl(response.previus);\r\n        await loadingPokemon(response.results);\r\n        setLoading(false);\r\n        setPokeShop(false);\r\n    }\r\n    fetchData();\r\n    \r\n   }, [])\r\n  \r\n \r\n \r\n  const loadingPokemon = async data => {\r\n    let poke = await Promise.all(\r\n      data.map(async pokemon => {\r\n        let pokemonRecord = await getPokemon(pokemon.url);\r\n        console.log(\"pokemonRecord\", pokemonRecord);\r\n        return pokemonRecord;\r\n    })\r\n    );\r\n    \r\n    setPokemon(poke);\r\n  }\r\n\r\n\r\n  const next = async () => {\r\n    setLoading(true);\r\n    let data =  await getAllPokemon(nextUrl)\r\n    await loadingPokemon(data.results)\r\n    setNextUrl(data.next);\r\n    setPrevUrl(data.previous);\r\n    setLoading(false);\r\n }\r\n\r\n const prev = async () => {\r\n   if (!prevUrl) return;\r\n   setLoading(true);\r\n   let data =  await getAllPokemon(prevUrl)\r\n   await loadingPokemon(data.results)\r\n   setNextUrl(data.next);\r\n   setPrevUrl(data.previous);\r\n   setLoading(false);\r\n}\r\n\r\n   const shopPokemon = (pokemons) => {\r\n     setPokemonShop(state => {\r\n       const pokeExists = (state.filter(p => pokemons.id == p.id).length >0);\r\n              \r\n      if (!pokeExists) {\r\n         state = [...state, pokemons];\r\n         state.sort(function (a,b) {\r\n           return a.id - b.id;\r\n         })\r\n       }\r\n       \r\n       return state;\r\n     })\r\n    \r\n    getAllPokemon(iniUrl);\r\n   }\r\n\r\n   const removePokemon = (id) => {\r\n     setPokemonShop(state => state.filter(p => p.id != id))\r\n   }\r\n\r\n  return(\r\n      <div>\r\n        \r\n     \r\n        <>\r\n          <div className=\"nav-poke\">\r\n            <Navbar bg=\"blue\" expand=\"lg\">\r\n              <Navbar.Brand href=\"/\">Pokemón Store</Navbar.Brand>\r\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n              <Navbar.Collapse id=\"basic-navbar-nav\" className=\"search-poke\"> \r\n                  <Form inline>\r\n                  <FormControl type=\"text\" placeholder=\"Insira o nome do Pokémon\" className=\"mr-sm-2\" />\r\n                  <Link to=\"/Search\" variant=\"primary\" className=\"link-search\" >Pesquisar</Link>\r\n                 \r\n                </Form>\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n          </div>\r\n\r\n                <div className=\"container\">\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 col-sm-6 col-md-8\" className=\"container-pokemon\">\r\n                        \r\n                            <div className=\"btn\">\r\n                                <button  variant=\"primary\" onClick={prev} className=\"prev-btn\">Prev </button>\r\n                                <button  variant=\"primary\" onClick={next} className=\"next-btn\">Next </button>\r\n                            </div>\r\n                            <CardDeck  className=\"pokemon-list\">\r\n                            { pokemon.map(poke => (\r\n                                    <Card style={{ width: '11rem', height: '20rem' }} className=\"pokemon\" key={poke.id} pokemon={poke} >\r\n                                \r\n                                        \r\n                                        <Card.Img variant=\"top\" src={\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\"\r\n                                                    + poke.id + \".png\"} className=\"Img-pokemon\" alt=\"\"/>\r\n                                            <Card.Body>\r\n                                                <Card.Title> {poke.name}</Card.Title>\r\n                                                <Card.Text>\r\n                                                    <p>Preço: R${poke.id *4},00</p> \r\n                                                </Card.Text>\r\n                                                <Button  onClick={()=> shopPokemon(poke)} className=\"catch-btn\"  variant=\"primary\">Comprar</Button>\r\n                                            </Card.Body>      \r\n                                    \r\n                                    </Card >\r\n                                ))}\r\n                            </CardDeck>\r\n                            <div className=\"btn\">\r\n                                <button variant=\"primary\" onClick={prev} className=\"prev-btn\">Prev </button>\r\n                                <button variant=\"primary\" onClick={next} className=\"next-btn\">Next </button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    \r\n\r\n                        <div class=\"col-6 col-md-4\" >\r\n                          <div className=\"carrinho\">\r\n                                <h1>  Carrinho  </h1>   \r\n                                \r\n                                <section className=\"pokeShop\">\r\n                                    <CardDeck className=\"pokemon-list-shop\">\r\n                                        {pokemonShop.map(poke => (\r\n                                        <Card  className=\"pokeCatch-shop\" key={poke.id} pokemon={poke} >\r\n\r\n                                            <Card.Img variant=\"top\" src={\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\"\r\n                                            + poke.id + \".png\"} className=\"Img-pokemon-shop\" alt=\"\"/>\r\n                                            \r\n                                            <Card.Body>\r\n                                                <Card.Title> {poke.name}</Card.Title>\r\n                                                <Card.Text>\r\n                                                    <p>Preço: R${poke.id *4},00</p> \r\n                                                </Card.Text>\r\n                                                <Button  className=\"remove\" onClick={ () => removePokemon(poke.id)}>&times; </Button>\r\n                                            </Card.Body>\r\n\r\n                                        </Card>\r\n\r\n                                ))}\r\n                                </CardDeck>\r\n\r\n\r\n\r\n                                </section>\r\n                                      <section>\r\n                                          <Button variant=\"primary\" onClick={handleShow}>\r\n                                            Finalizar Compra\r\n                                          </Button>\r\n\r\n                                          <Modal show={show} onHide={handleClose} >\r\n                                            <Modal.Header closeButton>\r\n                                              <Modal.Title>Compra Finalizada.</Modal.Title>\r\n                                            </Modal.Header>\r\n                                            <Modal.Body className=\"finalizar\"> \r\n                                              <h2>Parabéns! </h2>\r\n                                              <h4>Compra Finalizada.</h4>\r\n                                            </Modal.Body>\r\n                                          </Modal>\r\n\r\n                                      </section>\r\n                                   \r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>              \r\n                </div>\r\n        \r\n        </>\r\n           \r\n      </div>\r\n  \r\n  )\r\n\r\n}\r\n\r\n\r\nexport default  App;","\r\n\r\nexport async function getSearchPokemon(url,namePoke){\r\n    return new Promise((resolve, reject)=>{\r\n        \r\n            \r\n    } )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {Link } from 'react-router-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl'; \r\nimport Card from 'react-bootstrap/Card';\r\nimport CardDeck from 'react-bootstrap/CardDeck';\r\nimport  Button from 'react-bootstrap/Button';\r\nimport  Modal from 'react-bootstrap/Modal';\r\n\r\n\r\nimport '../../css/style.css';\r\n\r\nimport { getAllPokemon , getPokemon} from '../Home/pokemon';\r\nimport { getSearchPokemon } from './pokeSearch';\r\n\r\nexport default function SearchPokemon(){\r\n    const [ pokemon, setPokemon] =  useState ([]);\r\n    const [pokemonShop, setPokemonShop] = useState([]);\r\n    const [pokeShop, setPokeShop] = useState(false);\r\n    const [pokeSearch, setPokeSearch] =  useState([]);\r\n    const [nextUrl, setNextUrl] = useState('');\r\n    const [prevUrl, setPrevUrl] = useState('');\r\n    const [loading, setLoading] = useState('');\r\n    const quantidad = 0;\r\n    const iniUrl = 'https://pokeapi.co/api/v2/pokemon';\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n  \r\n  \r\n    useEffect(() => {\r\n      async function fetchData(){\r\n        let response = await getAllPokemon(iniUrl);\r\n        setNextUrl(response.next);\r\n          setPrevUrl(response.previus);\r\n          await loadingPokemon(response.results);\r\n          setLoading(false);\r\n          setPokeShop(false);\r\n      }\r\n      fetchData();\r\n      \r\n     }, [])\r\n    \r\n   \r\n   \r\n    const loadingPokemon = async data => {\r\n      let poke = await Promise.all(\r\n        data.map(async pokemon => {\r\n          let pokemonRecord = await getPokemon(pokemon.url);\r\n          console.log(\"pokemonRecord\", pokemonRecord);\r\n          return pokemonRecord;\r\n      })\r\n      );\r\n      \r\n      setPokemon(poke);\r\n    }\r\n  \r\n  \r\n    const next = async () => {\r\n      setLoading(true);\r\n      let data =  await getAllPokemon(nextUrl)\r\n      await loadingPokemon(data.results)\r\n      setNextUrl(data.next);\r\n      setPrevUrl(data.previous);\r\n      setLoading(false);\r\n   }\r\n  \r\n   const prev = async () => {\r\n     if (!prevUrl) return;\r\n     setLoading(true);\r\n     let data =  await getAllPokemon(prevUrl)\r\n     await loadingPokemon(data.results)\r\n     setNextUrl(data.next);\r\n     setPrevUrl(data.previous);\r\n     setLoading(false);\r\n  }\r\n  \r\n     const shopPokemon = (pokemons) => {\r\n       setPokemonShop(state => {\r\n         const pokeExists = (state.filter(p => pokemons.id == p.id).length >0);\r\n                \r\n        if (!pokeExists) {\r\n           state = [...state, pokemons];\r\n           state.sort(function (a,b) {\r\n             return a.id - b.id;\r\n           })\r\n         }\r\n         \r\n         return state;\r\n       })\r\n      \r\n      getAllPokemon(iniUrl);\r\n     }\r\n  \r\n     const removePokemon = (id) => {\r\n       setPokemonShop(state => state.filter(p => p.id != id))\r\n     }\r\n  \r\n    return(\r\n        <div>\r\n          \r\n       \r\n          <>\r\n            <div className=\"nav-poke\">\r\n              <Navbar bg=\"blue\" expand=\"lg\">\r\n                <Navbar.Brand href=\"/\">Pokemón Store</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\" className=\"search-poke\"> \r\n                    <Form inline>\r\n                    <FormControl type=\"text\" placeholder=\"Insira o nome do Pokémon\" className=\"mr-sm-2\" value={pokeSearch} onChange={e => setPokemon(e.target.value)} />\r\n                    <Link to=\"/Search\" onClick={()=> getSearchPokemon(iniUrl,pokeSearch)} variant=\"primary\" className=\"link-search\" >Pesquisar</Link>\r\n                   \r\n                  </Form>\r\n                </Navbar.Collapse>\r\n              </Navbar>\r\n            </div>\r\n  \r\n                  <div className=\"container\">\r\n  \r\n                      <div class=\"row\">\r\n                          <div class=\"col-12 col-sm-6 col-md-8\" className=\"container-pokemon\">\r\n                          \r\n                              <div className=\"btn\">\r\n                                  <button  variant=\"primary\" onClick={prev} className=\"prev-btn\">Prev </button>\r\n                                  <button  variant=\"primary\" onClick={next} className=\"next-btn\">Next </button>\r\n                              </div>\r\n                              <CardDeck  className=\"pokemon-list\">\r\n                              { pokemon.map(poke => (\r\n                                      <Card style={{ width: '11rem', height: '20rem' }} className=\"pokemon\" key={poke.id} pokemon={poke} >\r\n                                  \r\n                                          \r\n                                          <Card.Img variant=\"top\" src={\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\"\r\n                                                      + poke.id + \".png\"} className=\"Img-pokemon\" alt=\"\"/>\r\n                                              <Card.Body>\r\n                                                  <Card.Title> {poke.name}</Card.Title>\r\n                                                  <Card.Text>\r\n                                                      <p>Preço: R${poke.id *4},00</p> \r\n                                                  </Card.Text>\r\n                                                  <Button  onClick={()=> shopPokemon(poke)} className=\"catch-btn\"  variant=\"primary\">Comprar</Button>\r\n                                              </Card.Body>      \r\n                                      \r\n                                      </Card >\r\n                                  ))}\r\n                              </CardDeck>\r\n                              <div className=\"btn\">\r\n                                  <button variant=\"primary\" onClick={prev} className=\"prev-btn\">Prev </button>\r\n                                  <button variant=\"primary\" onClick={next} className=\"next-btn\">Next </button>\r\n                              </div>\r\n  \r\n                          </div>\r\n                      \r\n  \r\n                          <div class=\"col-6 col-md-4\">\r\n                          <div className=\"carrinho\">\r\n                                <h1>  Carrinho  </h1>   \r\n                                \r\n                                <section className=\"pokeShop\">\r\n                                    <CardDeck className=\"pokemon-list-shop\">\r\n                                        {pokemonShop.map(poke => (\r\n                                        <Card  className=\"pokeCatch-shop\" key={poke.id} pokemon={poke} >\r\n\r\n                                            <Card.Img variant=\"top\" src={\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\"\r\n                                            + poke.id + \".png\"} className=\"Img-pokemon-shop\" alt=\"\"/>\r\n                                            \r\n                                            <Card.Body>\r\n                                                <Card.Title> {poke.name}</Card.Title>\r\n                                                <Card.Text>\r\n                                                    <p>Preço: R${poke.id *4},00</p> \r\n                                                </Card.Text>\r\n                                                <Button  className=\"remove\" onClick={ () => removePokemon(poke.id)}>&times; </Button>\r\n                                            </Card.Body>\r\n\r\n                                        </Card>\r\n\r\n                                ))}\r\n                                </CardDeck>\r\n\r\n\r\n\r\n                                </section>\r\n                                      <section>\r\n                                          <Button variant=\"primary\" onClick={handleShow}>\r\n                                            Finalizar Compra\r\n                                          </Button>\r\n\r\n                                          <Modal show={show} onHide={handleClose} >\r\n                                            <Modal.Header closeButton>\r\n                                              <Modal.Title>Compra Finalizada.</Modal.Title>\r\n                                            </Modal.Header>\r\n                                            <Modal.Body className=\"finalizar\"> \r\n                                              <h2>Parabéns! </h2>\r\n                                              <h4>Compra Finalizada.</h4>\r\n                                            </Modal.Body>\r\n                                          </Modal>\r\n\r\n                                      </section>\r\n                                   \r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>              \r\n                </div>\r\n        \r\n        </>\r\n           \r\n      </div>\r\n  \r\n  )\r\n\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route,} from \"react-router-dom\";\nimport Home from './pages/Home';\nimport Search from './pages/Search';\nfunction App() {\n  return (\n    \n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/search\" exact component={Search} />\n        </Switch>\n      </Router>\n     \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}